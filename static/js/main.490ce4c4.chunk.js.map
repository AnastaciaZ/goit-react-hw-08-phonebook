{"version":3,"sources":["components/UserMenu/AuthNav/AuthNav.module.css","components/UserMenu/Navigations/Navigation.module.css","redux/auth/auth-operations.js","components/UserMenu/User/UserMenu.module.css","components/Button/Button.js","redux/auth/auth-actions.js","components/Button/Button.module.css","components/UserMenu/AppBar/AppBar.module.css","App.module.css","redux/contacts/actions.js","redux/auth/auth-selectors.js","components/UserMenu/AuthNav/AuthNav.js","components/UserMenu/Navigations/Navigation.js","components/UserMenu/User/UserMenu.js","components/UserMenu/AppBar/AppBar.js","components/UserMenu/PrivateRoute.js","components/UserMenu/PublicRoute.js","App.js","redux/contacts/reducer.js","redux/auth/auth-reducer.js","redux/store.js","index.js"],"names":["module","exports","axios","defaults","baseURL","token","headers","common","Authorization","authOperations","register","credentials","dispatch","a","authAction","registerRequest","post","response","data","registerSuccess","registerError","message","logIn","loginRequest","loginSuccess","loginError","logOut","logoutRequest","logoutSuccess","logoutError","getCurrentUser","getState","persistedToken","auth","getCorrentUserRequest","get","getCorrentUserSuccess","getCorrentUserError","Button","label","type","onClick","className","s","button","createAction","fetchContactRequest","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","authSelectors","getIsAuthenticated","state","isAuthenticated","getUserEmail","user","email","AuthNav","to","exact","NavigationLink","activeClassName","NavigationLinkActive","connect","mapDispatchToProps","onLogout","container","name","header","Component","component","redirectTo","routeProps","render","props","restrictad","HomeView","lazy","RegisterViews","LoginViews","ContactsViews","App","this","onGetCurrentUser","fallback","path","initialState","items","filter","createReducer","_","payload","action","contact","id","loading","error","combineReducers","initialUserState","setError","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contacts","contactsReducer","devTools","process","contactsStore","persistor","persistStore","ReactDOM","document","querySelector"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,eAAiB,gCAAgC,qBAAuB,wC,mBCA1FD,EAAOC,QAAU,CAAC,eAAiB,mCAAmC,qBAAuB,2C,qFCE7FC,IAAMC,SAASC,QAAU,2CAEzB,IAAMC,EAAQ,SACNA,GACAH,IAAMC,SAASG,QAAQC,OAAOC,cAA9B,iBAAwDH,IAF1DA,EAAQ,WAKNH,IAAMC,SAASG,QAAQC,OAAOC,cAAgB,IAiEhDC,EAAiB,CAAEC,SA7DR,SAAAC,GAAW,8CAAI,WAAMC,GAAN,eAAAC,EAAA,6DAE5BD,EAASE,IAAWC,mBAFQ,kBAKDb,IAAMc,KAAK,gBAAiBL,GAL3B,OAKlBM,EALkB,OAOxBZ,EAAUY,EAASC,KAAKb,OACxBO,EAASE,IAAWK,gBAAgBF,EAASC,OARrB,gDAWxBN,EAASE,IAAWM,cAAc,KAAMC,UAXhB,yDAAJ,uDA6DOC,MA9CrB,SAAAX,GAAW,8CAAI,WAAMC,GAAN,eAAAC,EAAA,6DACzBD,EAASE,IAAWS,gBADK,kBAIErB,IAAMc,KAAK,eAAgBL,GAJ7B,OAIfM,EAJe,OAMrBZ,EAAUY,EAASC,KAAKb,OACxBO,EAASE,IAAWU,aAAaP,EAASC,OAPrB,gDASrBN,EAASE,IAAWW,WAAW,KAAMJ,UAThB,yDAAJ,uDA8CiBK,OAjC3B,yDAAM,WAAMd,GAAN,SAAAC,EAAA,6DACjBD,EAASE,IAAWa,iBADH,kBAIPzB,IAAMc,KAAK,iBAJJ,OAMbX,IACAO,EAASE,IAAWc,iBAPP,gDASbhB,EAASE,IAAWe,YAAY,KAAMR,UATzB,yDAAN,uDAiCmCS,eApB3B,yDAAM,WAAOlB,EAAUmB,GAAjB,mBAAAlB,EAAA,2DAGrBkB,IADeC,EAFM,EAErBC,KAAQ5B,MAFa,wDASzBA,EAAU2B,GAEVpB,EAASE,IAAWoB,yBAXK,kBAcEhC,IAAMiC,IAAI,kBAdZ,OAcflB,EAde,OAerBL,EAASE,IAAWsB,sBAAsBnB,EAASC,OAf9B,kDAiBpBN,EAASE,IAAWuB,oBAAoB,KAAMhB,UAjB1B,0DAAN,0DAsBRZ,O,mBC5EfT,EAAOC,QAAU,CAAC,UAAY,4BAA4B,OAAS,yBAAyB,KAAO,yB,mECQpFqC,IANA,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,IAAUC,YAAV,MAAiB,SAAjB,MAA2BC,eAA3B,MAAqC,kBAAM,MAA3C,SACb,wBAAQC,UAAWC,IAAEC,OAAQJ,KAAMA,EAAMC,QAASA,EAAlD,SACGF,M,+BCLL,WAkBMzB,EAAa,CACfC,gBAjBoB8B,YAAa,wBAkBjC1B,gBAjBoB0B,YAAa,wBAkBjCzB,cAjBkByB,YAAa,sBAkB/BtB,aAhBiBsB,YAAa,qBAiB9BrB,aAhBiBqB,YAAa,qBAiB9BpB,WAhBeoB,YAAa,mBAiB5BlB,cAfkBkB,YAAa,sBAgB/BjB,cAfkBiB,YAAa,sBAgB/BhB,YAfgBgB,YAAa,oBAgB7BX,sBAd0BW,YAAa,8BAevCT,sBAd0BS,YAAa,8BAevCR,oBAdwBQ,YAAa,6BAiB1B/B,O,mBChCfd,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,UAAY,yB,+BCD9B,+VAEa6C,EAAsBD,YAAa,gCACnCE,EAAsBF,YAAa,gCACnCG,EAAoBH,YAAa,8BAEjCI,EAAoBJ,YAAa,8BACjCK,EAAoBL,YAAa,8BACjCM,EAAkBN,YAAa,4BAE/BO,EAAuBP,YAAa,iCACpCQ,EAAuBR,YAAa,iCACpCS,EAAqBT,YAAa,+BAElCU,EAAeV,YAAa,0B,sJCR1BW,EAFO,CAAEC,mBAJG,SAAAC,GAAK,OAAIA,EAAMzB,KAAK0B,iBAIHC,aAFvB,SAAAF,GAAK,OAAIA,EAAMzB,KAAK4B,KAAKC,Q,iBCuB/BC,EArBC,kBACZ,gCACI,cAAC,IAAD,CACIC,GAAG,YACHC,OAAK,EACLvB,UAAWC,IAAEuB,eACbC,gBAAiBxB,IAAEyB,qBAJvB,0BAQA,cAAC,IAAD,CACEJ,GAAG,SACDC,OAAK,EACLvB,UAAWC,IAAEuB,eACbC,gBAAiBxB,IAAEyB,qBAJvB,uB,iBCiBOC,eAJS,SAAAX,GAAK,MAAK,CAC9BC,gBAAiBH,EAAcC,mBAAmBC,MAGvCW,EAzBI,SAAC,GAAD,IAAEV,EAAF,EAAEA,gBAAF,OACf,gCACI,cAAC,IAAD,CACIK,GAAG,IACHC,OAAK,EACLvB,UAAWC,IAAEuB,eACbC,gBAAiBxB,IAAEyB,qBAJvB,kBAOCT,GACG,cAAC,IAAD,CACAK,GAAG,YACHC,OAAK,EACLvB,UAAWC,IAAEuB,eACbC,gBAAiBxB,IAAEyB,qBAJnB,6B,iCCGNE,EAAqB,CACvBC,SAAU9D,IAAeiB,QAGd2C,eARS,SAAAX,GAAK,MAAK,CAC9BI,MAAON,EAAcI,aAAaF,MAOEY,EAAzBD,EAhBE,SAAC,GAAD,IAAEP,EAAF,EAAEA,MAAOS,EAAT,EAASA,SAAT,OACb,sBAAK7B,UAAWC,IAAE6B,UAAlB,UACK,uBAAM9B,UAAWC,IAAE8B,KAAnB,sBAAmCX,KACnC,cAACxB,EAAA,EAAD,CAAQC,MAAM,SAASC,KAAK,SAASC,QAAS8B,U,iBCexCF,eARS,SAAAX,GAAK,MAAK,CAC9BC,gBAAiBH,EAAcC,mBAAmBC,MAOvCW,EAfA,SAAC,GAAD,IAAEV,EAAF,EAAEA,gBAAF,OACX,yBAAQjB,UAAWC,IAAE+B,OAArB,UACI,cAAC,EAAD,IACCf,EAAkB,cAAC,EAAD,IAAc,cAAC,EAAD,U,gBCU1BU,eAJS,SAAAX,GAAK,MAAK,CAC9BC,gBAAiBH,EAAcC,mBAAmBC,MAGvCW,EAlBM,SAAC,GAAD,IACNM,EADM,EACjBC,UACAjB,EAFiB,EAEjBA,gBACAkB,EAHiB,EAGjBA,WACGC,EAJc,mEAMjB,cAAC,IAAD,2BACQA,GADR,IAEIC,OAAQ,SAAAC,GAAK,OACTrB,EAAkB,cAACgB,EAAD,eAAeK,IAAY,cAAC,IAAD,CAAUhB,GAAIa,WCaxDR,eAJS,SAAAX,GAAK,MAAK,CAC9BC,gBAAiBH,EAAcC,mBAAmBC,MAGvCW,EAtBK,SAAC,GAAD,IACLM,EADK,EAChBC,UACAjB,EAFgB,EAEhBA,gBACAkB,EAHgB,EAGhBA,WACGC,EAJa,mEAMhB,cAAC,IAAD,2BACQA,GADR,IAEIC,OAAQ,SAAAC,GAAK,OACTrB,GAAmBmB,EAAWG,WAC1B,cAAC,IAAD,CAAUjB,GAAIa,IAEd,cAACF,EAAD,eAAeK,W,iBCRzBE,EAAWC,gBAAK,kBAAM,iCACtBC,EAAgBD,gBAAK,kBAAM,uDAC3BE,EAAaF,gBAAK,kBAAM,uDACxBG,EAAgBH,gBAAK,kBAAM,uDAE3BI,E,kLAGFC,KAAKR,MAAMS,qB,+BAIX,OACE,sBAAK/C,UAAWC,IAAE6B,UAAlB,UACF,cAAC,EAAD,IAEI,cAAC,WAAD,CAAUkB,SAAU,2CAApB,SACJ,eAAC,IAAD,WACE,cAAC,EAAD,CAAazB,OAAK,EAAC0B,KAAK,IAAIf,UAAYM,IACpC,cAAC,EAAD,CACES,KAAK,YACLV,YAAU,EACVJ,WAAW,YACXD,UAAWQ,IACb,cAAC,EAAD,CACEO,KAAK,SACLV,YAAU,EACVJ,WAAW,YACXD,UAAWS,IACb,cAAC,EAAD,CACEM,KAAK,YACLf,UAAWU,EACXT,WAAW,uB,GA3BLF,aAoCZL,EAAqB,CACzBmB,iBAAkBhF,IAAeqB,gBAGpBuC,cAAQ,KAAMC,EAAdD,CAAkCkB,G,mECvC3CK,GACQ,CACNC,MAAO,GACPC,OAAQ,IAIVD,GAAQE,YAAcH,GAAsBC,OAAvB,oBACtB9C,MAAsB,SAACiD,EAAD,YAAKC,WADL,eAEtB/C,MAAoB,SAACQ,EAAOwC,GAAR,OAAoBA,EAAOD,SAA3B,mBAAuCvC,OAFrC,eAGtBL,MAAuB,SAACK,EAAOwC,GAAR,OAAmBxC,EAAMoC,QAAO,SAAAK,GAAO,OAAIA,EAAQC,KAAOF,EAAOD,cAHlE,IAMrBI,GAAUN,aAAc,GAAD,oBACxBjD,MAAsB,kBAAM,KADJ,eAExBC,MAAsB,kBAAM,KAFJ,eAGxBC,MAAoB,kBAAM,KAHF,eAIxBC,MAAoB,kBAAM,KAJF,eAKxBC,MAAoB,kBAAM,KALF,eAMxBC,MAAkB,kBAAM,KANA,eAOxBC,MAAuB,kBAAM,KAPL,eAQxBC,MAAuB,kBAAM,KARL,eASxBC,MAAqB,kBAAM,KATH,IAYvBwC,GAASC,YAAcH,GAAsBE,OAAvB,gBACvBvC,MAAe,SAACyC,EAAGE,GAAJ,OAAeA,EAAOD,YAGpCK,GAAQP,YAAc,MAAD,oBACtB/C,MAAoB,SAACgD,EAAD,YAAMC,WADJ,eAEtB9C,MAAkB,SAAC6C,EAAD,YAAMC,WAFF,eAGtB3C,MAAqB,SAAC0C,EAAD,YAAMC,WAHL,IAMZM,gBAAgB,CAC3BV,SACAC,UACAO,WACAC,W,QClDEE,GAAmB,CAAE/B,KAAM,KAAMX,MAAO,MAExCD,GAAOkC,YAAcS,IAAD,kBAAC,EACtB1F,KAAWK,iBAAkB,SAAC6E,EAAD,YAAMC,QAAsBpC,QADpC,aAAC,EAEtB/C,KAAWU,cAAe,SAACwE,EAAD,YAAMC,QAAsBpC,QAFjC,aAAC,EAGtB/C,KAAWc,eAAgB,kBAAM4E,MAHZ,aAAC,EAItB1F,KAAWsB,uBAAwB,SAAC4D,EAAD,YAAKC,WAJnB,IAOpB5F,GAAQ0F,YAAc,MAAD,kBAAC,EACvBjF,KAAWK,iBAAkB,SAAC6E,EAAD,YAAMC,QAAsB5F,SADnC,aAAC,EAEvBS,KAAWU,cAAe,SAACwE,EAAD,YAAMC,QAAsB5F,SAFhC,aAAC,EAGvBS,KAAWc,eAAgB,kBAAI,QAHT,IAMrB6E,GAAW,SAACT,EAAD,YAAMC,SAEjBK,GAAQP,YAAc,MAAD,oBACtBjF,KAAWM,cAAgBqF,IADL,eAEtB3F,KAAWW,WAAagF,IAFF,eAGtB3F,KAAWe,YAAc4E,IAHH,eAItB3F,KAAWuB,oBAAsBoE,IAJX,IAOrB9C,GAAkBoC,YAAc,MAAD,kBAAC,EACjCjF,KAAWK,iBAAkB,kBAAM,KADH,aAAC,EAEjCL,KAAWU,cAAe,kBAAM,KAFA,aAAC,EAGjCV,KAAWsB,uBAAwB,kBAAM,KAHT,aAAC,EAIjCtB,KAAWM,eAAgB,kBAAM,KAJD,aAAC,EAKjCN,KAAWW,YAAa,kBAAM,KALE,aAAC,EAMjCX,KAAWuB,qBAAsB,kBAAM,KANP,aAAC,EAOjCvB,KAAWc,eAAgB,kBAAM,KAPD,IAWtB2E,gBAAgB,CAC3B1C,QACAF,mBACAtD,SACAiG,WC5BEI,GAAU,YACTC,YAAqB,CACpBC,kBAAmB,CACfC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAKhEC,GAAoB,CACtBC,IAAK,OACLC,aACAC,UAAW,CAAC,UAGVC,GAAQC,YAAe,CACzBC,QAAS,CACLzF,KAAM0F,YAAeP,GAAmBQ,IACxCC,SAAUC,IAEdpB,cACAqB,UAAUC,IAUCC,GALO,CAClBT,SACAU,UAJcC,YAAaX,K,MC3B/BY,IAASrD,OACL,cAAC,IAAD,CAAUyC,MAAOS,GAAcT,MAA/B,SACI,cAAC,IAAD,CAAanB,QAAS,KAAM6B,UAAYD,GAAcC,UAAtD,SACA,cAAC,IAAD,UACK,cAAC,EAAD,UAKTG,SAASC,cAAc,Y","file":"static/js/main.490ce4c4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationLink\":\"AuthNav_NavigationLink__2yS9w\",\"NavigationLinkActive\":\"AuthNav_NavigationLinkActive__20qiq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationLink\":\"Navigation_NavigationLink__1TNzz\",\"NavigationLinkActive\":\"Navigation_NavigationLinkActive__2zyeE\"};","import axios from 'axios';\r\nimport authAction from './auth-actions';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\nconst token = {\r\n    set(token) {\r\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n    },\r\n    unset() {\r\n        axios.defaults.headers.common.Authorization = '';\r\n    },\r\n};\r\n\r\nconst register = credentials => async dispatch => {\r\n\r\n    dispatch(authAction.registerRequest());\r\n\r\n    try {\r\n        const response = await axios.post('/users/signup', credentials);\r\n\r\n        token.set(response.data.token);\r\n        dispatch(authAction.registerSuccess(response.data));\r\n       \r\n    } catch (error) {\r\n        dispatch(authAction.registerError(error.message));\r\n    }\r\n};\r\n\r\nconst logIn = credentials => async dispatch => {\r\n    dispatch(authAction.loginRequest());\r\n\r\n    try {\r\n        const response = await axios.post('/users/login', credentials);\r\n       \r\n        token.set(response.data.token);\r\n        dispatch(authAction.loginSuccess(response.data));\r\n    } catch (error) {\r\n        dispatch(authAction.loginError(error.message));\r\n    }\r\n };\r\n\r\nconst logOut = () => async dispatch => {\r\n    dispatch(authAction.logoutRequest());\r\n\r\n    try {\r\n        await axios.post('/users/logout');\r\n       \r\n        token.unset();\r\n        dispatch(authAction.logoutSuccess());\r\n    } catch (error) {\r\n        dispatch(authAction.logoutError(error.message));\r\n    }\r\n};\r\n\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n    const {\r\n        auth: { token: persistedToken },\r\n    } = getState();\r\n\r\n    if (!persistedToken) {\r\n        return;\r\n    }\r\n\r\n    token.set(persistedToken);\r\n\r\n    dispatch(authAction.getCorrentUserRequest());\r\n\r\n    try {\r\n        const response = await axios.get('/users/current');\r\n        dispatch(authAction.getCorrentUserSuccess(response.data));\r\n    } catch (error) {\r\n         dispatch(authAction.getCorrentUserError(error.message));\r\n    }\r\n};\r\nconst authOperations = { register, logIn, logOut, getCurrentUser };\r\n\r\nexport default authOperations;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserMenu_container__1t1pX\",\"avatar\":\"UserMenu_avatar__3qxbv\",\"name\":\"UserMenu_name__MQ0y6\"};","import React from 'react';\r\nimport s from '../Button/Button.module.css';\r\n\r\nconst Button = ({ label, type = 'button', onClick = () => null }) => (\r\n  <button className={s.button} type={type} onClick={onClick}>\r\n    {label}\r\n  </button>\r\n);\r\n\r\nexport default Button;","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCorrentUserRequest = createAction('auth/getCorrentUserRequest');\r\nconst getCorrentUserSuccess = createAction('auth/getCorrentUserSuccess');\r\nconst getCorrentUserError = createAction('auth/getCorrentUserError');\r\n\r\nconst authAction = {\r\n    registerRequest,\r\n    registerSuccess,\r\n    registerError,\r\n    loginRequest,\r\n    loginSuccess,\r\n    loginError,\r\n    logoutRequest,\r\n    logoutSuccess,\r\n    logoutError,\r\n    getCorrentUserRequest,\r\n    getCorrentUserSuccess,\r\n    getCorrentUserError,\r\n};\r\n\r\nexport default authAction;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1SnJv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__dVZ5l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3u_S7\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\r\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\r\nexport const fetchContactError = createAction('contacts/fetchContactError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest');\r\nexport const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n\r\n","const getIsAuthenticated = state => state.auth.isAuthenticated;\r\n\r\nconst getUserEmail = state => state.auth.user.email;\r\n\r\nconst authSelectors = { getIsAuthenticated, getUserEmail };\r\n\r\nexport default authSelectors;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from '../AuthNav/AuthNav.module.css';\r\n\r\nconst AuthNav = () => (\r\n    <div>\r\n        <NavLink\r\n            to=\"/register\"\r\n            exact\r\n            className={s.NavigationLink}\r\n            activeClassName={s.NavigationLinkActive}\r\n            >\r\n            Registration\r\n        </NavLink>\r\n        <NavLink\r\n          to=\"/login\"\r\n            exact\r\n            className={s.NavigationLink}\r\n            activeClassName={s.NavigationLinkActive}\r\n            >\r\n            Login\r\n       </NavLink>\r\n    </div>\r\n);\r\n\r\nexport default AuthNav;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport authSelectors from '../../../redux/auth/auth-selectors';\r\nimport s from '../Navigations/Navigation.module.css';\r\n\r\nconst Navigation = ({isAuthenticated}) => (\r\n    <div>\r\n        <NavLink\r\n            to=\"/\"\r\n            exact\r\n            className={s.NavigationLink}\r\n            activeClassName={s.NavigationLinkActive}>\r\n            Main\r\n        </NavLink>\r\n        {isAuthenticated && (\r\n            <NavLink\r\n            to=\"/contacts\"\r\n            exact\r\n            className={s.NavigationLink}\r\n            activeClassName={s.NavigationLinkActive}>\r\n                Phonebook\r\n            </NavLink>\r\n        )}\r\n    </div>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(Navigation);\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport authSelectors from '../../../redux/auth/auth-selectors';\r\nimport authOperations from '../../../redux/auth/auth-operations';\r\nimport Button from '../../Button/Button'\r\nimport s from './UserMenu.module.css';\r\n\r\nconst UserMenu = ({email, onLogout }) => (\r\n    <div className={s.container}>\r\n         <span className={s.name}>Welcome, {email}</span>\r\n         <Button label=\"Logout\" type=\"button\" onClick={onLogout} />\r\n    </div>\r\n\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    email: authSelectors.getUserEmail(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    onLogout: authOperations.logOut\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport authSelectors from '../../../redux/auth/auth-selectors';\r\nimport AuthNav from '../AuthNav/AuthNav';\r\nimport Navigation from '../Navigations/Navigation';\r\nimport UserMenu from '../User/UserMenu';\r\nimport s from '../AppBar/AppBar.module.css';\r\n\r\n\r\n\r\nconst AppBar = ({isAuthenticated}) => (\r\n    <header className={s.header}>\r\n        <Navigation />\r\n        {isAuthenticated ? <UserMenu/> : <AuthNav />}  \r\n    </header>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\n/*const mapDispatchToProps = (state) => ({\r\n    isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});*/\r\n\r\nexport default connect(mapStateToProps)(AppBar);","import React from 'react';\r\nimport {Route, Redirect  } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport authSelectors from '../../redux/auth/auth-selectors';\r\n\r\nconst PrivateRoute = ({\r\n    component: Component,\r\n    isAuthenticated,\r\n    redirectTo,\r\n    ...routeProps\r\n}) => (\r\n    <Route\r\n        {...routeProps}\r\n        render={props =>\r\n            isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n        }\r\n    />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);","import React from 'react';\r\nimport {Route, Redirect  } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport authSelectors from '../../redux/auth/auth-selectors';\r\n\r\nconst PublicRoute = ({\r\n    component: Component,\r\n    isAuthenticated,\r\n    redirectTo,\r\n    ...routeProps\r\n}) => (\r\n    <Route\r\n        {...routeProps}\r\n        render={props =>\r\n            isAuthenticated && routeProps.restrictad ? (\r\n                <Redirect to={redirectTo} />\r\n            ) : (\r\n                <Component {...props} />\r\n            )\r\n        }\r\n    />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n\r\n","import React,{ Component, Suspense, lazy } from 'react';\nimport { Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport AppBar from './components/UserMenu/AppBar/AppBar';\nimport authOperations from './redux/auth/auth-operations';\nimport PrivateRoute from './components/UserMenu/PrivateRoute';\nimport PublicRoute from './components/UserMenu/PublicRoute';\nimport s from './App.module.css';\n\nconst HomeView = lazy(() => import('./veiws/HomeView/HomeView'));\nconst RegisterViews = lazy(() => import('./veiws/RegisterViews/RegisterViews'));\nconst LoginViews = lazy(() => import('./veiws/LoginViews/LoginViews'));\nconst ContactsViews = lazy(() => import('./veiws/ContactsViews/ContactsViews'));\n\nclass App extends Component{\n\n  componentDidMount(){\n    this.props.onGetCurrentUser();\n}\n\n  render() {\n    return (\n      <div className={s.container}>\n    <AppBar />\n    \n        <Suspense fallback={<p>Loading...</p>}>\n    <Switch>\n      <PublicRoute exact path=\"/\" component={ HomeView} />\n          <PublicRoute\n            path=\"/register\"\n            restrictad\n            redirectTo=\"/contacts\"\n            component={RegisterViews} />\n          <PublicRoute\n            path=\"/login\"\n            restrictad\n            redirectTo=\"/contacts\"\n            component={LoginViews} />\n          <PrivateRoute\n            path=\"/contacts\"\n            component={ContactsViews}\n            redirectTo=\"/login\"\n          />\n          </Switch>\n          </Suspense>\n    </div>\n    )\n  }\n};\n\nconst mapDispatchToProps = {\n  onGetCurrentUser: authOperations.getCurrentUser,\n};\n\nexport default connect(null, mapDispatchToProps)(App);","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError,\r\n    fetchContactRequest,\r\n    fetchContactSuccess,\r\n    fetchContactError,\r\n    changeFilter,\r\n} from './actions';\r\n\r\nconst initialState = {\r\n    contacts: {\r\n        items: [],\r\n        filter: '',\r\n    },\r\n};\r\n \r\nconst items = createReducer(initialState.contacts.items, {\r\n    [fetchContactSuccess]: (_, {payload})=>payload,\r\n    [addContactSuccess]: (state, action) => [action.payload, ...state],\r\n    [deleteContactSuccess]: (state, action) => state.filter(contact => contact.id !== action.payload),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n    [fetchContactRequest]: () => true,\r\n    [fetchContactSuccess]: () => false,\r\n    [fetchContactError]: () => false,\r\n    [addContactRequest]: () => true,\r\n    [addContactSuccess]: () => false,\r\n    [addContactError]: () => false,\r\n    [deleteContactRequest]: () => true,\r\n    [deleteContactSuccess]: () => false,\r\n    [deleteContactError]: () => false,   \r\n});\r\n\r\nconst filter = createReducer(initialState.contacts.filter, {\r\n    [changeFilter]: (_, action) => action.payload,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n    [fetchContactError]: (_, { payload }) => payload,\r\n    [addContactError]: (_, { payload }) => payload,\r\n    [deleteContactError]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter,\r\n    loading,\r\n    error,\r\n});","import {combineReducers } from 'redux';\r\nimport {createReducer } from '@reduxjs/toolkit';\r\nimport authAction from './auth-actions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n    [authAction.registerSuccess]: (_, { payload }) => payload.user,\r\n    [authAction.loginSuccess]: (_, { payload }) => payload.user,\r\n    [authAction.logoutSuccess]: () => initialUserState,\r\n    [authAction.getCorrentUserSuccess]: (_, {payload})=>payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n    [authAction.registerSuccess]: (_, { payload }) => payload.token,\r\n    [authAction.loginSuccess]: (_, { payload }) => payload.token,\r\n    [authAction.logoutSuccess]: ()=>null,\r\n});\r\n\r\nconst setError = (_, { payload }) => payload;\r\n\r\nconst error = createReducer(null, {\r\n    [authAction.registerError]: setError,\r\n    [authAction.loginError]: setError,\r\n    [authAction.logoutError]: setError,\r\n    [authAction.getCorrentUserError]: setError,\r\n});\r\n\r\nconst isAuthenticated = createReducer(null, {\r\n    [authAction.registerSuccess]: () => true,\r\n    [authAction.loginSuccess]: () => true,\r\n    [authAction.getCorrentUserSuccess]: () => true,\r\n    [authAction.registerError]: () => false,\r\n    [authAction.loginError]: () => false,\r\n    [authAction.getCorrentUserError]: () => false,\r\n    [authAction.logoutSuccess]: () => false,\r\n    \r\n});\r\n\r\nexport default combineReducers({\r\n    user,\r\n    isAuthenticated,\r\n    token,\r\n    error,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from './contacts/reducer';\r\nimport authReducer from './auth/auth-reducer';\r\n\r\nconst middleware = [\r\n    ...getDefaultMiddleware({\r\n        serializableCheck: {\r\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n        },\r\n    }),\r\n];\r\n\r\nconst authPersistConfig = {\r\n    key: 'auth',\r\n    storage,\r\n    whitelist: ['token']\r\n};\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        auth: persistReducer(authPersistConfig, authReducer),\r\n        contacts: contactsReducer,\r\n},\r\n    middleware,\r\n    devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nconst contactsStore = {\r\n    store,\r\n    persistor\r\n};\r\n\r\nexport default contactsStore;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport contactsStore from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\n\n\n\nReactDOM.render(\n    <Provider store={contactsStore.store}>\n        <PersistGate loading={null} persistor={ contactsStore.persistor}>\n        <BrowserRouter>\n             <App />\n        </BrowserRouter>\n       \n        </PersistGate>\n    </Provider>,\n    document.querySelector('#root')\n);\n\n\n\n"],"sourceRoot":""}