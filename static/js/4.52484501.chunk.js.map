{"version":3,"sources":["../node_modules/shortid/index.js","../node_modules/shortid/lib/index.js","../node_modules/shortid/lib/random/random-from-seed.js","../node_modules/shortid/lib/build.js","../node_modules/shortid/lib/generate.js","../node_modules/shortid/lib/random/random-byte-browser.js","../node_modules/shortid/node_modules/nanoid/format.browser.js","../node_modules/shortid/lib/is-valid.js","../node_modules/shortid/lib/util/cluster-worker-id-browser.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","veiws/ContactsViews/ContactsViews.module.css","redux/contacts/operations.js","components/Alert/Alert.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.js","../node_modules/react-transition-group/esm/utils/ChildMapping.js","../node_modules/react-transition-group/esm/TransitionGroup.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","components/ContactList/ContactList.js","components/Filter/Filter.js","veiws/ContactsViews/ContactsViews.js","components/Logo/Logo.js","components/Logo/Logo.module.css","../node_modules/shortid/lib/alphabet.js","components/Alert/Alert.module.css"],"names":["module","exports","require","alphabet","build","isValid","clusterWorkerId","generate","seed","seedValue","worker","workerId","characters","newCharacters","undefined","shuffled","nextValue","_seed_","counter","previousSeconds","str","seconds","Math","floor","Date","now","random","format","number","done","loopCounter","get","pow","randomByte","crypto","window","msCrypto","getRandomValues","size","Uint8Array","bytes","i","push","mask","log","length","LN2","step","id","RegExp","replace","test","contactsOperations","fetchContacts","dispatch","a","fetchContactRequest","axios","data","fetchContactSuccess","fetchContactError","message","addContact","name","contact","addContactRequest","post","addContactSuccess","addContactError","deleteContact","contactId","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","AlertMessage","className","s","container","textMessage","getFilterName","state","contacts","filter","getAllContacts","items","selectors","getLoading","loading","getFilterContacts","createSelector","toLowerCase","includes","ContactForm","nameInputId","shortid","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","some","item","alert","onSubmit","reset","setTimeout","this","contactsForm","htmlFor","labelForm","contactInput","type","onChange","Button","label","CSSTransition","in","timeout","classNames","styleAlert","unmountOnExit","Alert","React","Component","connect","contactsSelectors","getChildMapping","children","mapFn","result","Object","create","Children","map","c","forEach","child","key","isValidElement","mapper","getProp","prop","getNextChildMapping","nextProps","prevChildMapping","onExited","nextChildMapping","prev","next","getValueForKey","nextKeysPending","pendingKeys","prevKey","childMapping","nextKey","pendingNextKey","mergeChildMappings","keys","hasPrev","hasNext","prevChild","isLeaving","cloneElement","bind","exit","enter","values","obj","k","TransitionGroup","_React$Component","context","_this","handleExited","call","self","ReferenceError","_assertThisInitialized","contextValue","isMounting","firstRender","_inheritsLoose","_proto","prototype","componentDidMount","mounted","componentWillUnmount","getDerivedStateFromProps","_ref","appear","node","currentChildMapping","_extends","render","_this$props","component","childFactory","_objectWithoutPropertiesLoose","createElement","TransitionGroupContext","Provider","propTypes","defaultProps","onDelete","contactList","contactText","onClick","mapDispatchToProps","onChangeFilter","contactsActions","labelFilter","filterInput","e","target","ContactsViews","Logo","title","loadingContacts","srtyles","logo","previousSeed","randomFromSeed","ORIGINAL","setCharacters","_alphabet_","Error","unique","split","ind","arr","lastIndexOf","join","getShuffled","characterIndex","sourceArray","targetArray","r","splice","shuffle","lookup","index"],"mappings":"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","file":"static/js/4.52484501.chunk.js","sourcesContent":["'use strict';\nmodule.exports = require('./lib/index');\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;\n","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1567752802062;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 7;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n    randomByte = function(size) {\n        var bytes = [];\n        for (var i = 0; i < size; i++) {\n            bytes.push(Math.floor(Math.random() * 256));\n        }\n        return bytes;\n    };\n} else {\n    randomByte = function(size) {\n        return crypto.getRandomValues(new Uint8Array(size));\n    };\n}\n\nmodule.exports = randomByte;\n","// This file replaces `format.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nmodule.exports = function (random, alphabet, size) {\n  // We can’t use bytes bigger than the alphabet. To make bytes values closer\n  // to the alphabet, we apply bitmask on them. We look for the closest\n  // `2 ** x - 1` number, which will be bigger than alphabet size. If we have\n  // 30 symbols in the alphabet, we will take 31 (00011111).\n  // We do not use faster Math.clz32, because it is not available in browsers.\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  // Bitmask is not a perfect solution (in our example it will pass 31 bytes,\n  // which is bigger than the alphabet). As a result, we will need more bytes,\n  // than ID size, because we will refuse bytes bigger than the alphabet.\n\n  // Every hardware random generator call is costly,\n  // because we need to wait for entropy collection. This is why often it will\n  // be faster to ask for few extra bytes in advance, to avoid additional calls.\n\n  // Here we calculate how many random bytes should we call in advance.\n  // It depends on ID length, mask / alphabet size and magic number 1.6\n  // (which was selected according benchmarks).\n\n  // -~f => Math.ceil(f) if n is float number\n  // -~i => i + 1 if n is integer number\n  var step = -~(1.6 * mask * size / alphabet.length)\n  var id = ''\n\n  while (true) {\n    var bytes = random(step)\n    // Compact alternative for `for (var i = 0; i < step; i++)`\n    var i = step\n    while (i--) {\n      // If random byte is bigger than alphabet even after bitmask,\n      // we refuse it by `|| ''`.\n      id += alphabet[bytes[i] & mask] || ''\n      // More compact than `id.length + 1 === size`\n      if (id.length === +size) return id\n    }\n  }\n}\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var nonAlphabetic = new RegExp('[^' +\n      alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') +\n    ']');\n    return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nmodule.exports = 0;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsForm\":\"ContactForm_contactsForm__32Aoq\",\"labelForm\":\"ContactForm_labelForm__1cju4\",\"contactInput\":\"ContactForm_contactInput__3KVyS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__d8qAd\",\"contactText\":\"ContactList_contactText__Fc6tn\",\"enter\":\"ContactList_enter__1Oql_\",\"enterActive\":\"ContactList_enterActive__1V6ZS\",\"exit\":\"ContactList_exit__e2UoH\",\"exitActive\":\"ContactList_exitActive__CJGkk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__3VhTr\",\"labelFilter\":\"Filter_labelFilter__3U_Ho\",\"filterInput\":\"Filter_filterInput__3Yp2r\",\"enter\":\"Filter_enter__3qj45\",\"enterActive\":\"Filter_enterActive__2okn1\",\"exit\":\"Filter_exit__3NdNa\",\"exitActive\":\"Filter_exitActive__1owdM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactsViews_container__16Maw\",\"loading\":\"ContactsViews_loading__XHrNq\"};","import axios from 'axios';\r\nimport {\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError,\r\n    fetchContactRequest,\r\n    fetchContactSuccess,\r\n    fetchContactError,\r\n} from './actions';\r\n\r\nconst fetchContacts = () => async dispatch =>{\r\n    dispatch(fetchContactRequest());\r\n\r\n    try{\r\n        const {data}=await axios.get('/contacts');\r\n\r\n        dispatch(fetchContactSuccess(data));\r\n    } catch (error) {\r\n        dispatch(fetchContactError(error.message));\r\n    }\r\n};\r\n\r\nconst addContact = (name, number) => async dispatch => {\r\n    const contact = { name, number };\r\n\r\n    dispatch(addContactRequest());\r\n\r\n    try {\r\n        const { data } = await axios.post('/contacts', contact);\r\n\r\n        dispatch(addContactSuccess(data));\r\n    } catch (error) {\r\n        dispatch(addContactError(error.message));\r\n    }  \r\n};\r\n\r\nconst deleteContact = contactId => async dispatch => {\r\n    dispatch(deleteContactRequest());\r\n\r\n    try {\r\n        await axios.delete(`/contacts/${contactId}`);\r\n\r\n        dispatch(deleteContactSuccess(contactId));\r\n    } catch (error) {\r\n        dispatch(deleteContactError(error.message));\r\n    }\r\n};\r\n\r\nconst contactsOperations={ fetchContacts, addContact, deleteContact }\r\n\r\nexport default contactsOperations;","import React from 'react';\r\nimport s from '../Alert/Alert.module.css'\r\n\r\nconst AlertMessage = ({ message }) => (\r\n   \r\n    <div className={s.container}>\r\n        <p className={s.textMessage}>{ message}</p>\r\n    </div>  \r\n    \r\n);\r\n\r\nexport default AlertMessage;","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getLoading = state => state.contacts.loading;\r\n\r\nconst getFilterName = state => state.contacts.filter;\r\n\r\nconst getAllContacts = state => state.contacts.items;\r\n\r\nconst getFilterContacts = createSelector(\r\n    [getAllContacts, getFilterName],\r\n    (contacts, filter) => {\r\n        return contacts.filter(({ name }) =>\r\n            name.toLowerCase().includes(filter.toLowerCase()),\r\n        );\r\n    },\r\n);\r\n\r\nconst selectors = { getLoading, getFilterName, getAllContacts, getFilterContacts};\r\n\r\nexport default selectors;","import React from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { connect } from 'react-redux';\r\nimport contactsOperations from '../../redux/contacts/operations';\r\nimport shortid from 'shortid';\r\nimport Button from '../Button/Button';\r\nimport AlertMessage from '../Alert/Alert';\r\nimport styleAlert from '../Alert/Alert.module.css';\r\nimport s from '../ContactForm/ContactForm.module.css';\r\nimport contactsSelectors from '../../redux/contacts/selectors';\r\n\r\nclass ContactForm extends React.Component { \r\n    state = {\r\n        name: '',\r\n        number: '',\r\n        message: null,\r\n    };\r\n\r\n    nameInputId = shortid.generate();\r\n\r\n    handleChange = event => {\r\n    const { name,value } = event.currentTarget;\r\n    this.setState({ [name]: value });\r\n    };\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        if (this.state.name === '') {\r\n            this.setState({ message: 'Please enter contact name' }) || this.alert();\r\n            return;\r\n        }\r\n        if (this.state.number === '') {\r\n            this.setState({ message: 'Please enter contact number' }) || this.alert();\r\n            return;\r\n        }\r\n        \r\n       if (this.props.items.some((item) => item.name === this.state.name)){ \r\n           this.setState({ message: `${this.state.name} is already in contacts!` }) || this.alert();\r\n            return;\r\n        }\r\n    \r\n        this.props.onSubmit(this.state.name, this.state.number);\r\n        this.reset();\r\n    };\r\n\r\n    alert = () => {\r\n        setTimeout(() => {\r\n        this.setState({ message: null });\r\n      }, 2000)\r\n    }\r\n    reset = () => { \r\n        this.setState({name: '', number: ''});\r\n        };\r\n\r\n    render() { \r\n        const {name, number, message } = this.state;\r\n        return (\r\n            <form className={ s.contactsForm} onSubmit={this.handleSubmit}>\r\n                <label htmlFor={this.nameInputId} className={ s.labelForm}>  \r\n                    Name\r\n           <br />\r\n                    <input\r\n                    className={ s.contactInput}\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    onChange={this.handleChange}\r\n                        id={this.nameInputId} />\r\n                </label>\r\n                <br/>\r\n                <label className={ s.labelForm}>\r\n                    Number\r\n                     <br />\r\n            <input\r\n                    className={ s.contactInput}\r\n                    type=\"text\"\r\n                    name=\"number\"\r\n                    value={number}\r\n                    onChange={this.handleChange} />\r\n                </label>\r\n                <br />\r\n                <Button label=\"Add contact\" type=\"submit\" />\r\n                \r\n                <CSSTransition\r\n                    in={message!==null}\r\n                    timeout={250}\r\n                    classNames={styleAlert}\r\n                unmountOnExit>\r\n                    <AlertMessage message={ message}/>\r\n               </CSSTransition>\r\n\r\n            </form>   \r\n        );\r\n    };\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    items: contactsSelectors.getAllContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onSubmit: (name, number) => dispatch(contactsOperations.addContact(name, number)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);","import { Children, cloneElement, isValidElement } from 'react';\n/**\n * Given `this.props.children`, return an object mapping key to child.\n *\n * @param {*} children `this.props.children`\n * @return {object} Mapping of key to child\n */\n\nexport function getChildMapping(children, mapFn) {\n  var mapper = function mapper(child) {\n    return mapFn && isValidElement(child) ? mapFn(child) : child;\n  };\n\n  var result = Object.create(null);\n  if (children) Children.map(children, function (c) {\n    return c;\n  }).forEach(function (child) {\n    // run the map function here instead so that the key is the computed one\n    result[child.key] = mapper(child);\n  });\n  return result;\n}\n/**\n * When you're adding or removing children some may be added or removed in the\n * same render pass. We want to show *both* since we want to simultaneously\n * animate elements in and out. This function takes a previous set of keys\n * and a new set of keys and merges them with its best guess of the correct\n * ordering. In the future we may expose some of the utilities in\n * ReactMultiChild to make this easy, but for now React itself does not\n * directly have this concept of the union of prevChildren and nextChildren\n * so we implement it here.\n *\n * @param {object} prev prev children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @param {object} next next children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @return {object} a key set that contains all keys in `prev` and all keys\n * in `next` in a reasonable order.\n */\n\nexport function mergeChildMappings(prev, next) {\n  prev = prev || {};\n  next = next || {};\n\n  function getValueForKey(key) {\n    return key in next ? next[key] : prev[key];\n  } // For each key of `next`, the list of keys to insert before that key in\n  // the combined list\n\n\n  var nextKeysPending = Object.create(null);\n  var pendingKeys = [];\n\n  for (var prevKey in prev) {\n    if (prevKey in next) {\n      if (pendingKeys.length) {\n        nextKeysPending[prevKey] = pendingKeys;\n        pendingKeys = [];\n      }\n    } else {\n      pendingKeys.push(prevKey);\n    }\n  }\n\n  var i;\n  var childMapping = {};\n\n  for (var nextKey in next) {\n    if (nextKeysPending[nextKey]) {\n      for (i = 0; i < nextKeysPending[nextKey].length; i++) {\n        var pendingNextKey = nextKeysPending[nextKey][i];\n        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);\n      }\n    }\n\n    childMapping[nextKey] = getValueForKey(nextKey);\n  } // Finally, add the keys which didn't appear before any key in `next`\n\n\n  for (i = 0; i < pendingKeys.length; i++) {\n    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);\n  }\n\n  return childMapping;\n}\n\nfunction getProp(child, prop, props) {\n  return props[prop] != null ? props[prop] : child.props[prop];\n}\n\nexport function getInitialChildMapping(props, onExited) {\n  return getChildMapping(props.children, function (child) {\n    return cloneElement(child, {\n      onExited: onExited.bind(null, child),\n      in: true,\n      appear: getProp(child, 'appear', props),\n      enter: getProp(child, 'enter', props),\n      exit: getProp(child, 'exit', props)\n    });\n  });\n}\nexport function getNextChildMapping(nextProps, prevChildMapping, onExited) {\n  var nextChildMapping = getChildMapping(nextProps.children);\n  var children = mergeChildMappings(prevChildMapping, nextChildMapping);\n  Object.keys(children).forEach(function (key) {\n    var child = children[key];\n    if (!isValidElement(child)) return;\n    var hasPrev = (key in prevChildMapping);\n    var hasNext = (key in nextChildMapping);\n    var prevChild = prevChildMapping[key];\n    var isLeaving = isValidElement(prevChild) && !prevChild.props.in; // item is new (entering)\n\n    if (hasNext && (!hasPrev || isLeaving)) {\n      // console.log('entering', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: true,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    } else if (!hasNext && hasPrev && !isLeaving) {\n      // item is old (exiting)\n      // console.log('leaving', key)\n      children[key] = cloneElement(child, {\n        in: false\n      });\n    } else if (hasNext && hasPrev && isValidElement(prevChild)) {\n      // item hasn't changed transition states\n      // copy over the last transition props;\n      // console.log('unchanged', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: prevChild.props.in,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    }\n  });\n  return children;\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { getChildMapping, getInitialChildMapping, getNextChildMapping } from './utils/ChildMapping';\n\nvar values = Object.values || function (obj) {\n  return Object.keys(obj).map(function (k) {\n    return obj[k];\n  });\n};\n\nvar defaultProps = {\n  component: 'div',\n  childFactory: function childFactory(child) {\n    return child;\n  }\n};\n/**\n * The `<TransitionGroup>` component manages a set of transition components\n * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition\n * components, `<TransitionGroup>` is a state machine for managing the mounting\n * and unmounting of components over time.\n *\n * Consider the example below. As items are removed or added to the TodoList the\n * `in` prop is toggled automatically by the `<TransitionGroup>`.\n *\n * Note that `<TransitionGroup>`  does not define any animation behavior!\n * Exactly _how_ a list item animates is up to the individual transition\n * component. This means you can mix and match animations across different list\n * items.\n */\n\nvar TransitionGroup = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(TransitionGroup, _React$Component);\n\n  function TransitionGroup(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n\n    var handleExited = _this.handleExited.bind(_assertThisInitialized(_this)); // Initial children should all be entering, dependent on appear\n\n\n    _this.state = {\n      contextValue: {\n        isMounting: true\n      },\n      handleExited: handleExited,\n      firstRender: true\n    };\n    return _this;\n  }\n\n  var _proto = TransitionGroup.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.mounted = true;\n    this.setState({\n      contextValue: {\n        isMounting: false\n      }\n    });\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.mounted = false;\n  };\n\n  TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {\n    var prevChildMapping = _ref.children,\n        handleExited = _ref.handleExited,\n        firstRender = _ref.firstRender;\n    return {\n      children: firstRender ? getInitialChildMapping(nextProps, handleExited) : getNextChildMapping(nextProps, prevChildMapping, handleExited),\n      firstRender: false\n    };\n  } // node is `undefined` when user provided `nodeRef` prop\n  ;\n\n  _proto.handleExited = function handleExited(child, node) {\n    var currentChildMapping = getChildMapping(this.props.children);\n    if (child.key in currentChildMapping) return;\n\n    if (child.props.onExited) {\n      child.props.onExited(node);\n    }\n\n    if (this.mounted) {\n      this.setState(function (state) {\n        var children = _extends({}, state.children);\n\n        delete children[child.key];\n        return {\n          children: children\n        };\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Component = _this$props.component,\n        childFactory = _this$props.childFactory,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"component\", \"childFactory\"]);\n\n    var contextValue = this.state.contextValue;\n    var children = values(this.state.children).map(childFactory);\n    delete props.appear;\n    delete props.enter;\n    delete props.exit;\n\n    if (Component === null) {\n      return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n        value: contextValue\n      }, children);\n    }\n\n    return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n      value: contextValue\n    }, /*#__PURE__*/React.createElement(Component, props, children));\n  };\n\n  return TransitionGroup;\n}(React.Component);\n\nTransitionGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * `<TransitionGroup>` renders a `<div>` by default. You can change this\n   * behavior by providing a `component` prop.\n   * If you use React v16+ and would like to avoid a wrapping `<div>` element\n   * you can pass in `component={null}`. This is useful if the wrapping div\n   * borks your css styles.\n   */\n  component: PropTypes.any,\n\n  /**\n   * A set of `<Transition>` components, that are toggled `in` and out as they\n   * leave. the `<TransitionGroup>` will inject specific transition props, so\n   * remember to spread them through if you are wrapping the `<Transition>` as\n   * with our `<Fade>` example.\n   *\n   * While this component is meant for multiple `Transition` or `CSSTransition`\n   * children, sometimes you may want to have a single transition child with\n   * content that you want to be transitioned out and in when you change it\n   * (e.g. routes, images etc.) In that case you can change the `key` prop of\n   * the transition child as you change its content, this will cause\n   * `TransitionGroup` to transition the child out and back in.\n   */\n  children: PropTypes.node,\n\n  /**\n   * A convenience prop that enables or disables appear animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables enter animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables exit animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * You may need to apply reactive updates to a child as it is exiting.\n   * This is generally done by using `cloneElement` however in the case of an exiting\n   * child the element has already been removed and not accessible to the consumer.\n   *\n   * If you do need to update a child as it leaves you can provide a `childFactory`\n   * to wrap every child, even the ones that are leaving.\n   *\n   * @type Function(child: ReactElement) -> ReactElement\n   */\n  childFactory: PropTypes.func\n} : {};\nTransitionGroup.defaultProps = defaultProps;\nexport default TransitionGroup;","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport contactsOperations from '../../redux/contacts/operations';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport Button from '../Button/Button';\r\nimport s from '../ContactList/ContactList.module.css';\r\nimport contactsSelectors from '../../redux/contacts/selectors';\r\n\r\nconst ContactList = ({ contacts, onDelete}) => {\r\n    return (\r\n        <TransitionGroup component=\"ul\">\r\n            {contacts.map(({ id, name, number }) => (\r\n                <CSSTransition key={id} timeout={250} classNames={s}>\r\n                    <li className={s.contactList} /*key={id}*/ id={ id}>\r\n                        <p className={s.contactText}>{name}</p>\r\n                        <p className={s.contactText}>{number}</p>\r\n                        <Button label=\"Delete\" onClick={() => onDelete(id)} />\r\n                    </li>\r\n                </CSSTransition>\r\n            ))}\r\n            </TransitionGroup>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    contacts: contactsSelectors.getFilterContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onDelete: (id) => dispatch(contactsOperations.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { connect } from 'react-redux';\r\nimport * as contactsActions from '../../redux/contacts/actions';\r\nimport s from '../Filter/Filter.module.css';\r\nimport contactsSelectors from '../../redux/contacts/selectors';\r\n\r\nconst Filter = ({ items, name, onChangeFilter}) =>(\r\n\r\n     <CSSTransition\r\n            in={items.length >= 2}\r\n            timeout={250}\r\n            classNames={s}\r\n         unmountOnExit>\r\n        <div className={s.container}>\r\n            <label className={ s.labelFilter}>Find contacts by name\r\n             <br/>\r\n                <input className={s.filterInput}\r\n                    type=\"text\"\r\n                    value={name}\r\n                    onChange={ (e)=>onChangeFilter(e.target.value)} />\r\n            </label>    \r\n         </div>\r\n        </CSSTransition>\r\n    \r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    name: contactsSelectors.getFilterName(state),\r\n    items: contactsSelectors.getAllContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    onChangeFilter: contactsActions.changeFilter,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ContactForm from '../../components/ContactForm/ContactForm';\r\nimport ContactList from '../../components/ContactList/ContactList';\r\nimport Filter from '../../components/Filter/Filter';\r\nimport Logo from '../../components/Logo/Logo';\r\nimport s from '../ContactsViews/ContactsViews.module.css';\r\nimport contactsOperations from '../../redux/contacts/operations';\r\nimport contactsSelectors from '../../redux/contacts/selectors';\r\n  \r\n\r\nclass ContactsViews extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.fetchContacts();\r\n  }\r\n  render() { \r\n    return (\r\n      \r\n        <div>\r\n        <Logo title=\"Phonebook\" />\r\n        {this.props.loadingContacts && <h2 className={ s.loading}>Loading...</h2>}\r\n          <div className={s.container}>\r\n            <ContactForm />\r\n            <Filter />\r\n            <ContactList />\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  loadingContacts: contactsSelectors.getLoading(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchContacts: () => dispatch(contactsOperations.fetchContacts()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsViews);\r\n","import React from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport srtyles from '../Logo/Logo.module.css';\r\n\r\nconst Logo = ({ title}) => (\r\n    <CSSTransition\r\n        in={true}\r\n        appear={true}\r\n        timeout={ 500}\r\n        classNames={srtyles}\r\n        >\r\n    <div>\r\n        <h1 className={srtyles.logo}>{title}</h1>\r\n    </div>\r\n       </CSSTransition>\r\n);\r\n\r\nexport default Logo;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Logo_logo__P2pHs\",\"appear\":\"Logo_appear__2YSMm\",\"appearActive\":\"Logo_appearActive__2I4Jw\"};","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Alert_container__21Dar\",\"textMessage\":\"Alert_textMessage__3LgzT\",\"enter\":\"Alert_enter__2MUfr\",\"enterActive\":\"Alert_enterActive__1faEB\",\"exit\":\"Alert_exit__Mv_r0\",\"exitActive\":\"Alert_exitActive__3xoO7\"};"],"sourceRoot":""}